import duckdb, time


tiny_db = duckdb.connect('nyc_yellow_tiny.duckdb')
cursor = tiny_db.cursor()
cursor.execute("CREATE TABLE trips AS SELECT * FROM read_csv_auto('nyc_yellow_tiny.csv');")
sum1, sum2, sum3, sum4 = 0, 0, 0, 0
for i in range(10):
    t0 = time.perf_counter()
    res1 = cursor.execute('SELECT VendorID, count(*) FROM trips GROUP BY 1;').fetchall()
    t1 = time.perf_counter()
    sum1 += (t1 - t0)
    t0 = time.perf_counter()
    res2 = cursor.execute('SELECT passenger_count, avg(total_amount) FROM trips GROUP BY 1;').fetchall()
    t1 = time.perf_counter()
    sum2 += (t1 - t0)
    t0 = time.perf_counter()
    res3 = cursor.execute('''SELECT passenger_count, strftime('%Y', tpep_pickup_datetime), count(*) FROM trips GROUP BY 1, 2;''').fetchall()
    t1 = time.perf_counter()
    sum3 += (t1 - t0)
    t0 = time.perf_counter()
    res4 = cursor.execute('''SELECT passenger_count, strftime('%Y', tpep_pickup_datetime), round(trip_distance), count(*) FROM trips GROUP BY 1, 2, 3 ORDER BY 2, 4 desc;''').fetchall()
    t1 = time.perf_counter()
    sum4 += (t1 - t0)
    if i == 9:
        print("Query 1")
        print("Result: ", res1)
        print("Elapsed time: ", sum1 / 10)
        print()
        print("Query 2")
        print("Result: ", res2)
        print("Elapsed time: ", sum2 / 10)
        print()
        print("Query 3")
        print("Result: ", res3)
        print("Elapsed time: ", sum3 / 10)
        print()
        print("Query 4")
        print("Result: ", res4)
        print("Elapsed time: ", sum4 / 10)
        print()
cursor.close()
tiny_db.close()
